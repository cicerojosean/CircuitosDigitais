|cpu
rst => ctrl:controller.rst
rst => output[0]~reg0.ACLR
rst => output[1]~reg0.ACLR
rst => output[2]~reg0.ACLR
rst => output[3]~reg0.ACLR
rst => hex7[0]~reg0.ACLR
rst => hex7[1]~reg0.ACLR
rst => hex7[2]~reg0.ACLR
rst => hex7[3]~reg0.ACLR
rst => hex7[4]~reg0.ACLR
rst => hex7[5]~reg0.ACLR
rst => hex7[6]~reg0.PRESET
rst => hex6[0]~reg0.ACLR
rst => hex6[1]~reg0.ACLR
rst => hex6[2]~reg0.ACLR
rst => hex6[3]~reg0.ACLR
rst => hex6[4]~reg0.ACLR
rst => hex6[5]~reg0.ACLR
rst => hex6[6]~reg0.PRESET
rst => hex5[0]~reg0.ACLR
rst => hex5[1]~reg0.ACLR
rst => hex5[2]~reg0.ACLR
rst => hex5[3]~reg0.ACLR
rst => hex5[4]~reg0.ACLR
rst => hex5[5]~reg0.ACLR
rst => hex5[6]~reg0.PRESET
rst => hex4[0]~reg0.ACLR
rst => hex4[1]~reg0.ACLR
rst => hex4[2]~reg0.ACLR
rst => hex4[3]~reg0.ACLR
rst => hex4[4]~reg0.ACLR
rst => hex4[5]~reg0.ACLR
rst => hex4[6]~reg0.PRESET
rst => dp:datapath.rst
rst => hex3[6]~reg0.ENA
rst => hex3[5]~reg0.ENA
rst => hex3[4]~reg0.ENA
rst => hex3[3]~reg0.ENA
rst => hex3[2]~reg0.ENA
rst => hex3[1]~reg0.ENA
rst => hex3[0]~reg0.ENA
rst => hex2[6]~reg0.ENA
rst => hex2[5]~reg0.ENA
rst => hex2[4]~reg0.ENA
rst => hex2[3]~reg0.ENA
rst => hex2[2]~reg0.ENA
rst => hex2[1]~reg0.ENA
rst => hex2[0]~reg0.ENA
rst => hex1[6]~reg0.ENA
rst => hex1[5]~reg0.ENA
rst => hex1[4]~reg0.ENA
rst => hex1[3]~reg0.ENA
rst => hex1[2]~reg0.ENA
rst => hex1[1]~reg0.ENA
rst => hex1[0]~reg0.ENA
rst => hex0[6]~reg0.ENA
rst => hex0[5]~reg0.ENA
rst => hex0[4]~reg0.ENA
rst => hex0[3]~reg0.ENA
rst => hex0[2]~reg0.ENA
rst => hex0[1]~reg0.ENA
rst => hex0[0]~reg0.ENA
start => ctrl:controller.start
clk => ctrl:controller.clk
clk => dp:datapath.clk
clk => hex0[0]~reg0.CLK
clk => hex0[1]~reg0.CLK
clk => hex0[2]~reg0.CLK
clk => hex0[3]~reg0.CLK
clk => hex0[4]~reg0.CLK
clk => hex0[5]~reg0.CLK
clk => hex0[6]~reg0.CLK
clk => hex1[0]~reg0.CLK
clk => hex1[1]~reg0.CLK
clk => hex1[2]~reg0.CLK
clk => hex1[3]~reg0.CLK
clk => hex1[4]~reg0.CLK
clk => hex1[5]~reg0.CLK
clk => hex1[6]~reg0.CLK
clk => hex2[0]~reg0.CLK
clk => hex2[1]~reg0.CLK
clk => hex2[2]~reg0.CLK
clk => hex2[3]~reg0.CLK
clk => hex2[4]~reg0.CLK
clk => hex2[5]~reg0.CLK
clk => hex2[6]~reg0.CLK
clk => hex3[0]~reg0.CLK
clk => hex3[1]~reg0.CLK
clk => hex3[2]~reg0.CLK
clk => hex3[3]~reg0.CLK
clk => hex3[4]~reg0.CLK
clk => hex3[5]~reg0.CLK
clk => hex3[6]~reg0.CLK
clk => output[0]~reg0.CLK
clk => output[1]~reg0.CLK
clk => output[2]~reg0.CLK
clk => output[3]~reg0.CLK
clk => hex7[0]~reg0.CLK
clk => hex7[1]~reg0.CLK
clk => hex7[2]~reg0.CLK
clk => hex7[3]~reg0.CLK
clk => hex7[4]~reg0.CLK
clk => hex7[5]~reg0.CLK
clk => hex7[6]~reg0.CLK
clk => hex6[0]~reg0.CLK
clk => hex6[1]~reg0.CLK
clk => hex6[2]~reg0.CLK
clk => hex6[3]~reg0.CLK
clk => hex6[4]~reg0.CLK
clk => hex6[5]~reg0.CLK
clk => hex6[6]~reg0.CLK
clk => hex5[0]~reg0.CLK
clk => hex5[1]~reg0.CLK
clk => hex5[2]~reg0.CLK
clk => hex5[3]~reg0.CLK
clk => hex5[4]~reg0.CLK
clk => hex5[5]~reg0.CLK
clk => hex5[6]~reg0.CLK
clk => hex4[0]~reg0.CLK
clk => hex4[1]~reg0.CLK
clk => hex4[2]~reg0.CLK
clk => hex4[3]~reg0.CLK
clk => hex4[4]~reg0.CLK
clk => hex4[5]~reg0.CLK
clk => hex4[6]~reg0.CLK
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex0[0] <= hex0[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex0[1] <= hex0[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex0[2] <= hex0[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex0[3] <= hex0[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex0[4] <= hex0[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex0[5] <= hex0[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex0[6] <= hex0[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[0] <= hex1[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[1] <= hex1[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[2] <= hex1[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[3] <= hex1[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[4] <= hex1[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[5] <= hex1[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex1[6] <= hex1[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[0] <= hex2[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[1] <= hex2[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[2] <= hex2[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[3] <= hex2[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[4] <= hex2[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[5] <= hex2[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex2[6] <= hex2[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[0] <= hex3[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[1] <= hex3[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[2] <= hex3[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[3] <= hex3[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[4] <= hex3[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[5] <= hex3[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex3[6] <= hex3[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[0] <= hex4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[1] <= hex4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[2] <= hex4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[3] <= hex4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[4] <= hex4[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[5] <= hex4[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex4[6] <= hex4[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[0] <= hex5[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[1] <= hex5[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[2] <= hex5[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[3] <= hex5[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[4] <= hex5[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[5] <= hex5[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex5[6] <= hex5[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[0] <= hex6[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[1] <= hex6[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[2] <= hex6[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[3] <= hex6[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[4] <= hex6[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[5] <= hex6[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex6[6] <= hex6[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[0] <= hex7[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[1] <= hex7[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[2] <= hex7[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[3] <= hex7[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[4] <= hex7[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[5] <= hex7[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
hex7[6] <= hex7[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|ctrl:controller
rst => linha_ctrl[0]~reg0.ACLR
rst => linha_ctrl[1]~reg0.ACLR
rst => linha_ctrl[2]~reg0.ACLR
rst => linha_ctrl[3]~reg0.ACLR
rst => PC[0].ACLR
rst => PC[1].ACLR
rst => PC[2].ACLR
rst => PC[3].ACLR
rst => PC[4].ACLR
rst => PC[5].ACLR
rst => PC[6].ACLR
rst => PC[7].ACLR
rst => PC[8].ACLR
rst => PC[9].ACLR
rst => PC[10].ACLR
rst => PC[11].ACLR
rst => PC[12].ACLR
rst => PC[13].ACLR
rst => PC[14].ACLR
rst => PC[15].ACLR
rst => PC[16].ACLR
rst => PC[17].ACLR
rst => PC[18].ACLR
rst => PC[19].ACLR
rst => PC[20].ACLR
rst => PC[21].ACLR
rst => PC[22].ACLR
rst => PC[23].ACLR
rst => PC[24].ACLR
rst => PC[25].ACLR
rst => PC[26].ACLR
rst => PC[27].ACLR
rst => PC[28].ACLR
rst => PC[29].ACLR
rst => PC[30].ACLR
rst => PC[31].ACLR
rst => state~3.DATAIN
rst => estado_atual[0]~reg0.ENA
rst => OPCODE[3].ENA
rst => OPCODE[2].ENA
rst => OPCODE[1].ENA
rst => OPCODE[0].ENA
rst => ADDRESS[3].ENA
rst => ADDRESS[2].ENA
rst => ADDRESS[1].ENA
rst => ADDRESS[0].ENA
rst => imm[3]~reg0.ENA
rst => imm[2]~reg0.ENA
rst => imm[1]~reg0.ENA
rst => imm[0]~reg0.ENA
rst => estado_atual[3]~reg0.ENA
rst => estado_atual[2]~reg0.ENA
rst => estado_atual[1]~reg0.ENA
start => Selector40.IN3
start => state.DATAB
clk => estado_atual[0]~reg0.CLK
clk => estado_atual[1]~reg0.CLK
clk => estado_atual[2]~reg0.CLK
clk => estado_atual[3]~reg0.CLK
clk => imm[0]~reg0.CLK
clk => imm[1]~reg0.CLK
clk => imm[2]~reg0.CLK
clk => imm[3]~reg0.CLK
clk => linha_ctrl[0]~reg0.CLK
clk => linha_ctrl[1]~reg0.CLK
clk => linha_ctrl[2]~reg0.CLK
clk => linha_ctrl[3]~reg0.CLK
clk => ADDRESS[0].CLK
clk => ADDRESS[1].CLK
clk => ADDRESS[2].CLK
clk => ADDRESS[3].CLK
clk => OPCODE[0].CLK
clk => OPCODE[1].CLK
clk => OPCODE[2].CLK
clk => OPCODE[3].CLK
clk => PC[0].CLK
clk => PC[1].CLK
clk => PC[2].CLK
clk => PC[3].CLK
clk => PC[4].CLK
clk => PC[5].CLK
clk => PC[6].CLK
clk => PC[7].CLK
clk => PC[8].CLK
clk => PC[9].CLK
clk => PC[10].CLK
clk => PC[11].CLK
clk => PC[12].CLK
clk => PC[13].CLK
clk => PC[14].CLK
clk => PC[15].CLK
clk => PC[16].CLK
clk => PC[17].CLK
clk => PC[18].CLK
clk => PC[19].CLK
clk => PC[20].CLK
clk => PC[21].CLK
clk => PC[22].CLK
clk => PC[23].CLK
clk => PC[24].CLK
clk => PC[25].CLK
clk => PC[26].CLK
clk => PC[27].CLK
clk => PC[28].CLK
clk => PC[29].CLK
clk => PC[30].CLK
clk => PC[31].CLK
clk => state~1.DATAIN
imm[0] <= imm[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
imm[1] <= imm[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
imm[2] <= imm[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
imm[3] <= imm[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
estado_atual[0] <= estado_atual[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
estado_atual[1] <= estado_atual[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
estado_atual[2] <= estado_atual[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
estado_atual[3] <= estado_atual[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
linha_ctrl[0] <= linha_ctrl[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
linha_ctrl[1] <= linha_ctrl[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
linha_ctrl[2] <= linha_ctrl[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
linha_ctrl[3] <= linha_ctrl[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|dp:datapath
rst => alu:alu1.rst
rst => output_4[0]~reg0.ACLR
rst => output_4[1]~reg0.ACLR
rst => output_4[2]~reg0.ACLR
rst => output_4[3]~reg0.ACLR
rst => dado[0].ACLR
rst => dado[1].ACLR
rst => dado[2].ACLR
rst => dado[3].ACLR
rst => alu_in2[0].ACLR
rst => alu_in2[1].ACLR
rst => alu_in2[2].ACLR
rst => alu_in2[3].ACLR
rst => alu_in1[0].ACLR
rst => alu_in1[1].ACLR
rst => alu_in1[2].ACLR
rst => alu_in1[3].ACLR
rst => acu_in[0].ACLR
rst => acu_in[1].ACLR
rst => acu_in[2].ACLR
rst => acu_in[3].ACLR
rst => acc:acumulador_atual.rst
rst => rf:registrador.rst
rst => enable_reg.ENA
rst => enable_alu.ENA
rst => teste[1].ENA
rst => teste[0].ENA
rst => opcode_sig[3].ENA
rst => opcode_sig[2].ENA
rst => opcode_sig[1].ENA
rst => opcode_sig[0].ENA
rst => imm_sig[3].ENA
rst => imm_sig[2].ENA
rst => imm_sig[1].ENA
rst => imm_sig[0].ENA
rst => enable_acu.ENA
rst => dd[1].ENA
rst => dd[0].ENA
clk => alu:alu1.clk
clk => acc:acumulador_atual.clk
clk => rf:registrador.clk
clk => enable_reg.CLK
clk => dd[0].CLK
clk => dd[1].CLK
clk => enable_acu.CLK
clk => imm_sig[0].CLK
clk => imm_sig[1].CLK
clk => imm_sig[2].CLK
clk => imm_sig[3].CLK
clk => opcode_sig[0].CLK
clk => opcode_sig[1].CLK
clk => opcode_sig[2].CLK
clk => opcode_sig[3].CLK
clk => teste[0].CLK
clk => teste[1].CLK
clk => enable_alu.CLK
clk => output_4[0]~reg0.CLK
clk => output_4[1]~reg0.CLK
clk => output_4[2]~reg0.CLK
clk => output_4[3]~reg0.CLK
clk => dado[0].CLK
clk => dado[1].CLK
clk => dado[2].CLK
clk => dado[3].CLK
clk => alu_in2[0].CLK
clk => alu_in2[1].CLK
clk => alu_in2[2].CLK
clk => alu_in2[3].CLK
clk => alu_in1[0].CLK
clk => alu_in1[1].CLK
clk => alu_in1[2].CLK
clk => alu_in1[3].CLK
clk => acu_in[0].CLK
clk => acu_in[1].CLK
clk => acu_in[2].CLK
clk => acu_in[3].CLK
imm[0] => Equal1.IN3
imm[0] => Mux3.IN0
imm[0] => imm_sig[0].DATAIN
imm[1] => Equal1.IN2
imm[1] => Mux2.IN0
imm[1] => imm_sig[1].DATAIN
imm[2] => Equal1.IN1
imm[2] => Mux1.IN0
imm[2] => Mux10.IN0
imm[2] => Mux10.IN1
imm[2] => Mux10.IN2
imm[2] => Mux10.IN3
imm[2] => Mux10.IN4
imm[2] => Mux10.IN5
imm[2] => imm_sig[2].DATAIN
imm[3] => Equal1.IN0
imm[3] => Mux0.IN0
imm[3] => Mux9.IN0
imm[3] => Mux9.IN1
imm[3] => Mux9.IN2
imm[3] => Mux9.IN3
imm[3] => Mux9.IN4
imm[3] => Mux9.IN5
imm[3] => imm_sig[3].DATAIN
opcode[0] => Equal0.IN3
opcode[0] => Mux0.IN4
opcode[0] => Mux1.IN4
opcode[0] => Mux2.IN4
opcode[0] => Mux3.IN4
opcode[0] => Mux4.IN10
opcode[0] => Mux5.IN3
opcode[0] => Mux6.IN3
opcode[0] => Mux7.IN3
opcode[0] => Mux8.IN3
opcode[0] => Mux9.IN9
opcode[0] => Mux10.IN9
opcode[0] => Mux11.IN3
opcode[0] => Mux12.IN3
opcode[0] => Mux13.IN3
opcode[0] => Mux14.IN3
opcode[0] => Mux15.IN9
opcode[0] => Mux16.IN3
opcode[0] => Mux17.IN3
opcode[0] => Mux18.IN3
opcode[0] => Mux19.IN3
opcode[0] => opcode_sig[0].DATAIN
opcode[1] => Equal0.IN2
opcode[1] => Mux0.IN3
opcode[1] => Mux1.IN3
opcode[1] => Mux2.IN3
opcode[1] => Mux3.IN3
opcode[1] => Mux4.IN9
opcode[1] => Mux5.IN2
opcode[1] => Mux6.IN2
opcode[1] => Mux7.IN2
opcode[1] => Mux8.IN2
opcode[1] => Mux9.IN8
opcode[1] => Mux10.IN8
opcode[1] => Mux11.IN2
opcode[1] => Mux12.IN2
opcode[1] => Mux13.IN2
opcode[1] => Mux14.IN2
opcode[1] => Mux15.IN8
opcode[1] => Mux16.IN2
opcode[1] => Mux17.IN2
opcode[1] => Mux18.IN2
opcode[1] => Mux19.IN2
opcode[1] => opcode_sig[1].DATAIN
opcode[2] => Equal0.IN1
opcode[2] => Mux0.IN2
opcode[2] => Mux1.IN2
opcode[2] => Mux2.IN2
opcode[2] => Mux3.IN2
opcode[2] => Mux4.IN8
opcode[2] => Mux5.IN1
opcode[2] => Mux6.IN1
opcode[2] => Mux7.IN1
opcode[2] => Mux8.IN1
opcode[2] => Mux9.IN7
opcode[2] => Mux10.IN7
opcode[2] => Mux11.IN1
opcode[2] => Mux12.IN1
opcode[2] => Mux13.IN1
opcode[2] => Mux14.IN1
opcode[2] => Mux15.IN7
opcode[2] => Mux16.IN1
opcode[2] => Mux17.IN1
opcode[2] => Mux18.IN1
opcode[2] => Mux19.IN1
opcode[2] => opcode_sig[2].DATAIN
opcode[3] => Equal0.IN0
opcode[3] => Mux0.IN1
opcode[3] => Mux1.IN1
opcode[3] => Mux2.IN1
opcode[3] => Mux3.IN1
opcode[3] => Mux4.IN7
opcode[3] => Mux5.IN0
opcode[3] => Mux6.IN0
opcode[3] => Mux7.IN0
opcode[3] => Mux8.IN0
opcode[3] => Mux9.IN6
opcode[3] => Mux10.IN6
opcode[3] => Mux11.IN0
opcode[3] => Mux12.IN0
opcode[3] => Mux13.IN0
opcode[3] => Mux14.IN0
opcode[3] => Mux15.IN6
opcode[3] => Mux16.IN0
opcode[3] => Mux17.IN0
opcode[3] => Mux18.IN0
opcode[3] => Mux19.IN0
opcode[3] => opcode_sig[3].DATAIN
output_4[0] <= output_4[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_4[1] <= output_4[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_4[2] <= output_4[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output_4[3] <= output_4[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
out_opcode[0] <= opcode_sig[0].DB_MAX_OUTPUT_PORT_TYPE
out_opcode[1] <= opcode_sig[1].DB_MAX_OUTPUT_PORT_TYPE
out_opcode[2] <= opcode_sig[2].DB_MAX_OUTPUT_PORT_TYPE
out_opcode[3] <= opcode_sig[3].DB_MAX_OUTPUT_PORT_TYPE


|cpu|dp:datapath|alu:alu1
rst => output[0]~reg0.ACLR
rst => output[1]~reg0.ACLR
rst => output[2]~reg0.ACLR
rst => output[3]~reg0.ACLR
clk => output[0]~reg0.CLK
clk => output[1]~reg0.CLK
clk => output[2]~reg0.CLK
clk => output[3]~reg0.CLK
in1[0] => Add0.IN4
in1[0] => Add1.IN8
in1[0] => output.IN0
in1[0] => output.IN0
in1[0] => Mux3.IN5
in1[0] => Mux3.IN4
in1[1] => Add0.IN3
in1[1] => Add1.IN7
in1[1] => output.IN0
in1[1] => output.IN0
in1[1] => Mux2.IN5
in1[1] => Mux2.IN4
in1[2] => Add0.IN2
in1[2] => Add1.IN6
in1[2] => output.IN0
in1[2] => output.IN0
in1[2] => Mux1.IN5
in1[2] => Mux1.IN4
in1[3] => Add0.IN1
in1[3] => Add1.IN5
in1[3] => output.IN0
in1[3] => output.IN0
in1[3] => Mux0.IN5
in1[3] => Mux0.IN4
in2[0] => Add0.IN8
in2[0] => output.IN1
in2[0] => output.IN1
in2[0] => Add1.IN4
in2[1] => Add0.IN7
in2[1] => output.IN1
in2[1] => output.IN1
in2[1] => Add1.IN3
in2[2] => Add0.IN6
in2[2] => output.IN1
in2[2] => output.IN1
in2[2] => Add1.IN2
in2[3] => Add0.IN5
in2[3] => output.IN1
in2[3] => output.IN1
in2[3] => Add1.IN1
opcode[0] => Mux0.IN9
opcode[0] => Mux1.IN9
opcode[0] => Mux2.IN9
opcode[0] => Mux3.IN9
opcode[1] => Mux0.IN8
opcode[1] => Mux1.IN8
opcode[1] => Mux2.IN8
opcode[1] => Mux3.IN8
opcode[2] => Mux0.IN7
opcode[2] => Mux1.IN7
opcode[2] => Mux2.IN7
opcode[2] => Mux3.IN7
opcode[3] => Mux0.IN6
opcode[3] => Mux1.IN6
opcode[3] => Mux2.IN6
opcode[3] => Mux3.IN6
enable => output[0]~reg0.ENA
enable => output[3]~reg0.ENA
enable => output[2]~reg0.ENA
enable => output[1]~reg0.ENA
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|dp:datapath|acc:acumulador_atual
rst => temp[0].ACLR
rst => temp[1].ACLR
rst => temp[2].ACLR
rst => temp[3].ACLR
rst => output[0]~reg0.ACLR
rst => output[1]~reg0.ACLR
rst => output[2]~reg0.ACLR
rst => output[3]~reg0.ACLR
clk => temp[0].CLK
clk => temp[1].CLK
clk => temp[2].CLK
clk => temp[3].CLK
clk => output[0]~reg0.CLK
clk => output[1]~reg0.CLK
clk => output[2]~reg0.CLK
clk => output[3]~reg0.CLK
input[0] => output.DATAB
input[1] => output.DATAB
input[2] => output.DATAB
input[3] => output.DATAB
enb => output.OUTPUTSELECT
enb => output.OUTPUTSELECT
enb => output.OUTPUTSELECT
enb => output.OUTPUTSELECT
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


|cpu|dp:datapath|rf:registrador
rst => out1[0].ACLR
rst => out1[1].ACLR
rst => out1[2].ACLR
rst => out1[3].ACLR
rst => out3[0].ACLR
rst => out3[1].ACLR
rst => out3[2].ACLR
rst => out3[3].ACLR
rst => out2[0].ACLR
rst => out2[1].ACLR
rst => out2[2].ACLR
rst => out2[3].ACLR
rst => out0[0].ACLR
rst => out0[1].ACLR
rst => out0[2].ACLR
rst => out0[3].ACLR
rst => output[0]~reg0.ACLR
rst => output[1]~reg0.ACLR
rst => output[2]~reg0.ACLR
rst => output[3]~reg0.ACLR
clk => out1[0].CLK
clk => out1[1].CLK
clk => out1[2].CLK
clk => out1[3].CLK
clk => out3[0].CLK
clk => out3[1].CLK
clk => out3[2].CLK
clk => out3[3].CLK
clk => out2[0].CLK
clk => out2[1].CLK
clk => out2[2].CLK
clk => out2[3].CLK
clk => out0[0].CLK
clk => out0[1].CLK
clk => out0[2].CLK
clk => out0[3].CLK
clk => output[0]~reg0.CLK
clk => output[1]~reg0.CLK
clk => output[2]~reg0.CLK
clk => output[3]~reg0.CLK
input[0] => Mux3.IN0
input[0] => Mux7.IN0
input[0] => Mux11.IN0
input[0] => Mux15.IN0
input[1] => Mux2.IN0
input[1] => Mux6.IN0
input[1] => Mux10.IN0
input[1] => Mux14.IN0
input[2] => Mux1.IN0
input[2] => Mux5.IN0
input[2] => Mux9.IN0
input[2] => Mux13.IN0
input[3] => Mux0.IN0
input[3] => Mux4.IN0
input[3] => Mux8.IN0
input[3] => Mux12.IN0
sel[0] => Mux0.IN2
sel[0] => Mux1.IN2
sel[0] => Mux2.IN2
sel[0] => Mux3.IN2
sel[0] => Mux4.IN2
sel[0] => Mux5.IN2
sel[0] => Mux6.IN2
sel[0] => Mux7.IN2
sel[0] => Mux8.IN2
sel[0] => Mux9.IN2
sel[0] => Mux10.IN2
sel[0] => Mux11.IN2
sel[0] => Mux12.IN2
sel[0] => Mux13.IN2
sel[0] => Mux14.IN2
sel[0] => Mux15.IN2
sel[0] => Mux16.IN1
sel[0] => Mux17.IN1
sel[0] => Mux18.IN1
sel[0] => Mux19.IN1
sel[1] => Mux0.IN1
sel[1] => Mux1.IN1
sel[1] => Mux2.IN1
sel[1] => Mux3.IN1
sel[1] => Mux4.IN1
sel[1] => Mux5.IN1
sel[1] => Mux6.IN1
sel[1] => Mux7.IN1
sel[1] => Mux8.IN1
sel[1] => Mux9.IN1
sel[1] => Mux10.IN1
sel[1] => Mux11.IN1
sel[1] => Mux12.IN1
sel[1] => Mux13.IN1
sel[1] => Mux14.IN1
sel[1] => Mux15.IN1
sel[1] => Mux16.IN0
sel[1] => Mux17.IN0
sel[1] => Mux18.IN0
sel[1] => Mux19.IN0
enb => output[3]~reg0.ENA
enb => output[2]~reg0.ENA
enb => output[1]~reg0.ENA
enb => output[0]~reg0.ENA
enb => out0[3].ENA
enb => out0[2].ENA
enb => out0[1].ENA
enb => out0[0].ENA
enb => out2[3].ENA
enb => out2[2].ENA
enb => out2[1].ENA
enb => out2[0].ENA
enb => out3[3].ENA
enb => out3[2].ENA
enb => out3[1].ENA
enb => out3[0].ENA
enb => out1[3].ENA
enb => out1[2].ENA
enb => out1[1].ENA
enb => out1[0].ENA
output[0] <= output[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[1] <= output[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[2] <= output[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
output[3] <= output[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE


